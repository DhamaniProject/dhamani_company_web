{
  "page": {
    "title": "Users"
  },
  "table": {
    "title": "Company Users",
    "fullName": "Full Name",
    "email": "Email",
    "status": "Status",
    "status_active": "Active",
    "status_inactive": "Inactive",
    "noUsers": "No users found",
    "addUser": "Add User"
  },
  "modal": {
    "title": "Add User",
    "firstName": "First Name",
    "lastName": "Last Name",
    "email": "Email",
    "password": "Password",
    "status": "Status",
    "placeholders": {
      "firstName": "Enter first name",
      "lastName": "Enter last name",
      "email": "Enter email",
      "password": "Enter password",
      "status": "Select status"
    },
    "addUser": "Add User",
    "cancel": "Cancel",
    "errors": {
      "firstNameRequired": "First name is required",
      "lastNameRequired": "Last name is required",
      "emailRequired": "Email is required",
      "invalidEmail": "Invalid email format",
      "passwordRequired": "Password is required",
      "passwordMinLength": "Password must be at least 8 characters long",
      "passwordUpperCase": "Password must contain at least one uppercase letter",
      "passwordLowerCase": "Password must contain at least one lowercase letter",
      "passwordDigit": "Password must contain at least one digit",
      "passwordSpecialChar": "Password must contain at least one special character (@$!%*#?&)",
      "statusRequired": "Status is required"
    }
  },
  "updateModal": {
    "title": "Update User",
    "updateUser": "Update User"
  },
  "pagination": {
    "pageStart": "Page",
    "pageMiddle": "of",
    "previous": "Previous",
    "next": "Next"
  },
  "userAddedSuccess": "User added successfully",
  "userUpdatedSuccess": "User updated successfully",
  "errors": {
    "fetchUsersError": "Failed to load users",
    "updateUserError": "Failed to update user",
    "createUserError": "Failed to create user",
    "noCompanyId": "No company ID available",
    "forbiddenError": "You are not authorized to perform this action",
    "badRequestError": "Invalid request",
    "notFoundError": "User or company not found",
    "methodNotAllowedError": "The requested method is not allowed for this endpoint",
    "emailAlreadyExistsError": "This email is already registered"
  }
}
